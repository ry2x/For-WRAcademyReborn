# Stage 1: Build the application
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package.json pnpm-lock.yaml ./

# Install pnpm and dependencies
RUN npm install -g pnpm && \
  pnpm install

# Copy only necessary source files
COPY src/ ./src/
COPY tsconfig.json ./

# Build the application
RUN pnpm run compile && \
  rm -f dist/tsconfig.tsbuildinfo

# Stage 2: Install production dependencies and prepare dist
FROM node:22-alpine AS deps

# Set working directory
WORKDIR /app

# Copy package files and dist from builder
COPY package.json pnpm-lock.yaml ./

# Install pnpm and production dependencies
RUN npm install -g pnpm && \
  pnpm install --prod --frozen-lockfile && \
  npm uninstall -g pnpm

# Stage 3: Create the production image
FROM gcr.io/distroless/nodejs22-debian12:nonroot

# Copy node_modules and dist contents
COPY --from=deps /app/node_modules /app/node_modules
COPY --from=builder /app/dist /app/dist
COPY /locales /app/locales/

# Set environment variables
ENV NODE_ENV=production

# Set working directory for the Application
WORKDIR /app/dist

# Start the application
ENTRYPOINT  ["/nodejs/bin/node", "index.js"]
